Package labels;


// character sets or regular expressions denoted by identifers
Helpers
  all = [0 .. 0xFFFF];
  cr = 13;
  lf = 10;
  eol_chars = [cr + lf];
  chars = [all - eol_chars];
  tab = 9;
  space = ' ';
  whitespace_chars = [tab + space];
  whitespaces = whitespace_chars+;
  string_chars = [chars - whitespace_chars];
  string = string_chars+;

  digit = ['0' .. '9'];

  punctuation_chars = [ '.' + [',' + [ '!' + [ '?' + [ ':' + ';' ]]]]];
  special_chars = [ '<' + [ '>' +  [ ':' + [ '%' + '#' ]]]];
  word = [[string_chars - punctuation_chars ] - special_chars ]+;
  file_extension = '.s1h' | '.s1' | '.s2';

States
  rest, timed_labels;

Tokens
  {rest,timed_labels} eol = eol_chars;
  {rest->timed_labels} hend_marker = eol_chars 'hend' eol_chars;

  {rest} string = string;

  {timed_labels} time_marker = whitespaces digit+;
  {timed_labels} time_marker_two = whitespaces digit+ '.' digit+;

  accent_position_symbol = ''' ''';
  //accent_position_symbol = ''';
  ampersand = '&';
  comma = ',';
  comment_symbol = 'pc' | 'PC';
  compound_boundary_prefix = '$#';

  // consonant tokens
  p = 'p';
  b = 'b';
  t = 't';
  d = 'd';
  k = 'k';
  g = 'g';
  big_q = 'Q';
  f = 'f';
  v = 'v';
  s = 's';
  z = 'z';
  big_s = 'S';
  big_z = 'Z';
  big_c = 'C';
  j = 'j';
  x = 'x';
  h = 'h'; // is also used to mark aspiration
  m = 'm';
  n = 'n'; // is also not specified symbol
  big_n = 'N';
  l = 'l';
  r = 'r';

  // vowel tokens
  a = 'a';
  e = 'e';
  i = 'i';
  big_i = 'I';
  o = 'o';
  big_o = 'O';
  u = 'u';
  big_u = 'U';
  y = 'y';
  big_y = 'Y';
  big_e = 'E';
  two = '2'; // also used for lexical and prosodic informations
  nine = '9';
  at = '@';
  six = '6';

  creak1 = 'q' | 'kq';
  creak2 = 'pq' | 'tq';
  early_peak = ')';
  early_valley = ']';
  effort_marker = '>';
  equals = '=';
  exclamation_mark = '!';
  full_stop = '.';
  hesitation_symbol = 'v:';
  highregister = 'HR';
  kp_symbol = 'kp';
  late_peak = '(';
  lengthening_symbol = 'z:';
  lexical_stress = ''' | '"';
  lowregister = 'LR';
  ma_symbol = 'MA';
  medial_peak = '^';
  minus = '-';
  neologism_symbol = 'n:';
  non_vocal_noise = ':k';
  non_word_prefix = '#';
  nonearly_valley = '[';
  null = '0';
  one = '1';
  phrase_symbol = 'PG';
  plus = '+';
  prehead_symbol = 'HP';
  question_mark = '?';
  rateminus = 'RM';
  rateplus = 'RP';
  colon = ':';
  semicolon = ';';
  sentence_start_symbol = 'c:';
  silence_symbol = 'p:';
  tilde = '~';
  three = '3';
  uncertainty = '%';
  upstep = '|';
  verbal_break = '/';

  unspecified_noise = 'g:'; // <Ger\"ausch>
  cough = 'q:';             // <Husten>
  laughter = 'l:';          // <Lachen>
  harrumph = 'r:';          // <R\"auspern>
  swallow = 'w:';           // <Schlucken>
  smack = 's:';             // <Schmatzen>
  vocal_noise_h = 'h:';

  whitespaces = whitespaces;
  word_boundary_prefix =  '##';
  word_internal_prefix = '$';
  word_interruption_symbol = '_';


Ignored Tokens
  whitespaces, eol;

Productions
  
  file = rest hend_marker timed_label+;

  /*
   * canonical transcription and realised form can be
   * imprecise as we have all those informations in
   * the last section (timed labels)
   */
  rest = string+;

  timed_label = time_marker tlabel time_marker_two;

  tlabel = label;

  accent_label =   {no_word_internal} word_internal_prefix pros_label_marker no_accent
                 | {no_non_word} non_word_prefix pros_label_marker no_accent
                 | {full_word_internal} word_internal_prefix pros_label_marker full_accent
                 | {full_non_word} non_word_prefix pros_label_marker full_accent
                 | {other_word_internal} word_internal_prefix pros_label_marker other_accent
                 | {other_non_word} non_word_prefix pros_label_marker other_accent;

  accent_modifier =   {reset} reset
                    | {upstep} upstep;

  accent_position_label =   {word_boundary} word_boundary_prefix accent_position_symbol
                          | {word_internal} word_internal_prefix accent_position_symbol;

  aspiration = minus aspiration_symbol fwm?; // marks plosive release phase

  aspiration_symbol = non_glottal_plosive h;

  boundaryconsonant =   {unmodified} word_boundary_prefix consonant
                      | {modified} word_boundary_prefix consonant_modification
                      | {creak} word_boundary_prefix consonantcreak1_modification;

  comment_label = non_word_prefix pros_label_marker comment_symbol;

  compoundconsonant =   {unmodified} compound_boundary_prefix consonant
                      | {modified} compound_boundary_prefix consonant_modification
                      | {creak} compound_boundary_prefix consonantcreak_modification;

  consonant = uncertainty? consonant_symbol;

  consonant_deletion = consonant_symbol minus;

  consonant_insertion = uncertainty? minus consonant_symbol;

  consonant_label =   {boundary} boundaryconsonant
                    | {compound} compoundconsonant
                    | {nonboundary} nonboundaryconsonant  // following cases are no real consonants ...
                    | {nasalization} nasalization_label
                    | {ma} ma_label
                    | {lengthening} lengthening_label
                    | {kp} kp_label;

  consonant_modification =   {replacement} consonant_replacement
                           | {deletion} consonant_deletion
                           | {insertion} consonant_insertion;

  consonant_replacement =   {normal} uncertainty? [c1]:consonant_symbol minus [c2]:consonant_symbol
                          | {palatal_approximant_by_close_unrounded_long} uncertainty? j minus i colon
                          | {palatal_approximant_by_close_unrounded_less} uncertainty? j minus big_i;

  plosive =   {non_glottal} non_glottal_plosive
            | {glottal} big_q;

  non_glottal_plosive =   {voiceless_bilabial} p
                        | {voiced_bilabial} b
                        | {voiceless_alveolar} t
                        | {voiced_alveolar} d
                        | {voiceless_velar} k
                        | {voiced_velar} g;

  fricative =   {voiceless_labiodental} f
              | {voiced_labiodental} v
              | {voiceless_alveolar} s
              | {voiced_alveloar} z
              | {voiceless_postalveolar} big_s
              | {voiced_postalveolar} big_z
              | {voiceless_palatal} big_c
              | {voiceless_velar} x
              | {voiceless_glottal} h;

  nasal =   {bilabial} m
          | {alveolar} n
          | {velar} big_n;

  consonant_symbol =   {plosive} plosive
                     | {fricative} fricative
                     | {nasal} nasal
                     | {palatal_approximant} j
                     | {alveolar_lateral_approximant} l
                     | {alveolar_trill} r;

  consonantcreak1_insertion = minus creak1;

  consonantcreak1_modification =   {replacement} consonantcreak1_replacement
                                 | {insertion} consonantcreak1_insertion;

  consonantcreak1_replacement = consonant_symbol minus creak1;

  consonantcreak_modification =   {replacement} consonantcreak_replacement
                                | {insertion} consonantcreak1_insertion;

  consonantcreak_replacement = consonant_symbol minus creak;

  contour_label =   {fall_word_internal} word_internal_prefix pros_label_marker fall
                  | {fall_non_word} non_word_prefix pros_label_marker fall
                  | {rise_word_internal} word_internal_prefix pros_label_marker rise
                  | {rise_non_word} non_word_prefix pros_label_marker rise
                  | {fall_rise_word_internal} word_internal_prefix pros_label_marker fall_rise
                  | {fall_rise_non_word} non_word_prefix pros_label_marker fall_rise
                  | {fall_flat_word_internal} word_internal_prefix pros_label_marker fall_flat
                  | {fall_flat_non_word} non_word_prefix pros_label_marker fall_flat;

  creak =   {case1} creak1
          | {case2} creak2;

  fwm = plus;

  fall =   {level_fall} level_fall full_stop
         | {mid_fall} mid_fall full_stop
         | {terminal_fall} terminal_fall full_stop;

  fall_flat =   {level} level_fall semicolon
              | {mid} mid_fall semicolon
              | {terminal} terminal_fall semicolon;

  fall_rise = fall rise;

  false_start = equals? verbal_break plus;

  full_accent =   {case1} accent_modifier uncertainty? full_accent_symbol effort_marker? synchronizer
                | {case2} accent_modifier uncertainty? full_accent_symbol effort_marker
                | {case3} uncertainty? full_accent_symbol effort_marker? synchronizer?;

  full_accent_symbol = two;

  hesitation = uncertainty? hesitation_symbol;

  hesitation_deletion = hesitation_symbol minus;

  hesitation_insertion = uncertainty? minus hesitation_symbol;

  hesitation_label =   {unmodified_word_boundary} word_boundary_prefix hesitation
                     | {unmodified_word_internal} word_internal_prefix hesitation
                     | {modified_word_boundary} word_boundary_prefix hesitation_modification
                     | {modified_word_internal} word_internal_prefix hesitation_modification;

  hesitation_modification =   {deletion} hesitation_deletion
                            | {insertion} hesitation_insertion;

  kp_label =   {word_boundary} word_boundary_prefix minus kp_symbol
             | {word_internal} word_internal_prefix minus kp_symbol;

  label =   {segment} segment
          | {nonverbal} nonverbal_label
          | {tech_artefact} technical_artefact_label
          | {punctuation} punctuation_label
          | {prosodic_label} prosodic_label;

  lengthening_deletion = lengthening_symbol minus;

  lengthening_insertion = minus lengthening_symbol;

  lengthening_label =   {unmodified} word_internal_prefix lengthening_symbol
                      | {modified} word_internal_prefix lengthening_modification;

  lengthening_modification =   {deletion} lengthening_deletion
                             | {insertion} lengthening_insertion;

  level_fall = null;

  ma_label =   {word_boundary} word_boundary_prefix minus ma_symbol
             | {compound_boundary} compound_boundary_prefix minus ma_symbol
             | {word_internal} word_internal_prefix minus ma_symbol;

  mid_fall = one;

  nasalization_label = word_internal_prefix minus tilde fwm?;

  neologism_label =   {word_internal} word_internal_prefix neologism_symbol
                    | {word_boundary} word_boundary_prefix neologism_symbol;

  no_accent = null;

  no_peak = minus;

  nonboundaryconsonant =   {unmodified} word_internal_prefix consonant fwm?
                         | {modified} word_internal_prefix consonant_modification fwm?
                         | {creak} word_internal_prefix consonantcreak_modification fwm?
                         | {aspiration} word_internal_prefix aspiration;

  nonverbal_label =   {vocal_noise} vocal_noise_label
                    | {hesitation} hesitation_label
                    | {read_error} read_error_label
                    | {neologism} neologism_label
                    | {uncertain_stretch} uncertain_stretch_label
                    | {verbal_break} verbal_break_label
                    | {word_interruption} word_interruption_label;

  not_specified = n;

  other_accent =   {case1} partial_accent synchronizer
                 | {case2} partial_accent effort_marker
                 | {case3} upstep reinforcement effort_marker synchronizer
                 | {case4} upstep reinforcement synchronizer
                 | {case5} upstep reinforcement effort_marker
                 | {case6} reinforcement effort_marker synchronizer
                 | {case7} reinforcement synchronizer
                 | {case8} reinforcement effort_marker;

  partial_accent = upstep? partial_accent_symbol;

  partial_accent_symbol = one;

  peak =   {early} early_peak
         | {medial} medial_peak
         | {late} late_peak
         | {no_peak} no_peak;

  phrase =   {not_specified} phrase_modifier? phrase_symbol not_specified
           | {verbal_break} phrase_modifier? phrase_symbol verbal_break;

  phrase_label =   {case1} non_word_prefix pros_label_marker phrase
                 | {case2} word_internal_prefix pros_label_marker phrase
                 | {case3} non_word_prefix pros_label_marker phrase_technical_break;

  phrase_modifier = equals;

  phrase_technical_break = phrase_symbol semicolon;

  prehead_label = non_word_prefix pros_label_marker prehead_symbol prehead_level;

  prehead_level =   {case1} one
                  | {case2} two;

  pros_label =   {phrase} phrase_label
               | {contour} contour_label
               | {accent} accent_label
               | {accent_position} accent_position_label
               | {prehead} prehead_label
               | {comment} comment_label
               | {tempo} tempo_label
               | {register} register_label;

  pros_label_marker = ampersand uncertainty?;

  prosodic_label = pros_label uncertainty?;

  punctuation_label =   {sentence_punctuation} non_word_prefix sentence_punctuation
                      | {comma} non_word_prefix comma;

  read_error_label =   {unrepresented_speech_stretch_marker} word_boundary_prefix minus neologism_symbol
                     | {word_boundary} word_boundary_prefix neologism_symbol minus?
                     | {non_word} non_word_prefix minus neologism_symbol;

  register =    {high} highregister
              | {low} lowregister;

  register_label =   {word_internal} word_internal_prefix pros_label_marker register
                   | {non_word} non_word_prefix pros_label_marker register;

  reinforcement = three;
  reset = plus;
  rise =   {comma} comma
         | {question_mark} question_mark;

  segment = seg;
  seg =   {case1} consonant_label
        | {case2} vowel_label;

  sentence_punctuation =   {full_stop} uncertainty? full_stop
                         | {question_mark} uncertainty? question_mark
                         | {exclamation_mark} exclamation_mark
                         | {sentence_start} sentence_start_symbol;

  synchronizer =   {peak} peak
                 | {valley} valley;

  technical_artefact =   {non_vocal_noise} non_vocal_noise
                       | {technical_break} semicolon;

  technical_artefact_deletion = technical_artefact minus;

  technical_artefact_insertion = minus technical_artefact;

  technical_artefact_label =   {unmodified_non_word} non_word_prefix technical_artefact
                             | {unmodified_word_internal} word_internal_prefix technical_artefact
                             | {unmodified_word_boundary} word_boundary_prefix technical_artefact
                             | {modified_non_word} non_word_prefix technical_artefact_modification
                             | {modified_word_internal} word_internal_prefix technical_artefact_modification
                             | {modified_word_boundary} word_boundary_prefix technical_artefact_modification;

  technical_artefact_modification =   {deletion} technical_artefact_deletion
                                    | {insertion} technical_artefact_insertion;

  tempo =   {faster} rateplus
          | {slower} rateminus;

  tempo_label =   {word_internal} word_internal_prefix pros_label_marker tempo
                | {non_word} non_word_prefix pros_label_marker tempo;

  terminal_fall = two;

  truncation = uncertainty? equals? verbal_break minus;

  uncertain_stretch = uncertainty;

  uncertain_stretch_deletion = uncertainty minus;

  uncertain_stretch_insertion = minus uncertainty;

  uncertain_stretch_label =   {unmodified_word_boundary} word_boundary_prefix uncertain_stretch
                            | {unmodified_word_internal} word_internal_prefix uncertain_stretch
                            | {unmodified_non_word} non_word_prefix uncertain_stretch
                            | {modified_word_boundary} word_boundary_prefix uncertain_stretch_modification
                            | {modified_word_internal} word_internal_prefix uncertain_stretch_modification
                            | {modified_non_word} non_word_prefix uncertain_stretch_modification;

  uncertain_stretch_modification =   {deletion} uncertain_stretch_deletion
                                   | {insertion} uncertain_stretch_insertion;

  valley =   {early} early_valley
           | {nonearly} nonearly_valley;

  verbal_break_label =   {truncation} word_internal_prefix truncation
                       | {false_start} word_internal_prefix false_start;

  vocal_noise1_symbol =   {smack} smack
                        | {swallow} swallow
                        | {h} vocal_noise_h
                        | {laughter} laughter
                        | {cough} cough
                        | {harrumpg} harrumph
                        | {unspecific} unspecified_noise;

  vocal_noise2_symbol =   {h} vocal_noise_h
                        | {laughter} laughter
                        | {cough} cough
                        | {harrumph} harrumph
                        | {unspecific} unspecified_noise;

  vocal_noise1 =   {noise} vocal_noise1_symbol
                 | {silence} uncertainty? silence_symbol;

  vocal_noise1_insertion =   {noise} minus vocal_noise1_symbol
                           | {silence} uncertainty? minus silence_symbol;

  vocal_noise1_label =   {unmodified_word_internal} word_internal_prefix vocal_noise1
                       | {unmodified_non_word} non_word_prefix vocal_noise1
                       | {modified_word_internal} word_internal_prefix vocal_noise1_modification
                       | {modified_non_word} non_word_prefix vocal_noise1_modification;

  vocal_noise1_modification =   {replacement} vocal_noise1_replacement
                              | {deletion} vocal_noise1_deletion
                              | {insertion} vocal_noise1_insertion;

  vocal_noise1_replacement =   {noise_by_noise} [v1]:vocal_noise1_symbol minus [v2]:vocal_noise1_symbol
                             | {silence_by_noise} silence_symbol minus vocal_noise1_symbol
                             | {noise_by_silence} uncertainty? vocal_noise1_symbol minus silence_symbol;

  vocal_noise2 = vocal_noise2_symbol;

  vocal_noise2_deletion = vocal_noise2_symbol minus;

  vocal_noise2_insertion = minus vocal_noise2_symbol;

  vocal_noise2_label =   {unmodified_word_boundary} word_boundary_prefix vocal_noise2
                       | {modified_word_boundary} word_boundary_prefix vocal_noise2_modification;

  vocal_noise2_modification =   {replacement} vocal_noise2_replacement
                              | {deletion} vocal_noise2_deletion
                              | {insertion} vocal_noise2_insertion;

  vocal_noise2_replacement = [v1]:vocal_noise2_symbol minus [v2]:vocal_noise2_symbol;

  vocal_noise1_deletion =   {noise} vocal_noise1_symbol minus
                          | {silence} silence_symbol minus;

  vocal_noise_label =   {case1} vocal_noise1_label
                      | {case2} vocal_noise2_label;

  vowel =   {unstressed} uncertainty? vowel_symbol fwm?
          | {stressed} uncertainty? lexical_stress stressable_vowel;

  vowel_deletion =   {unstressed} vowel_symbol minus fwm?
                   | {stressed} lexical_stress stressable_vowel minus;

  vowel_insertion =  uncertainty? minus vowel_symbol fwm?;

  vowel_label =   {unmodified} word_internal_prefix vowel
                | {modified} word_internal_prefix vowel_modification;

  vowel_modification =   {replacement} vowel_replacement
                       | {deletion} vowel_deletion
                       | {insertion} vowel_insertion;

  vowel_replacement =  uncertainty? vowel_replacement2;

  vowel_replacement2 =   {unstressed_by_unstressed} [v1]:vowel_symbol minus [v2]:vowel_symbol fwm?
                       | {stressed_by_stressed} [l1]:lexical_stress [s1]:stressable_vowel minus [l2]:lexical_stress [s2]:stressable_vowel
                       | {stressed_by_unstressed} lexical_stress stressable_vowel minus vowel_symbol
                       | {unstressed_by_stressed} vowel_symbol minus lexical_stress stressable_vowel
                       | {close_unrounded_less_by_alveolar_lateral_approximant} big_i minus l
                       | {close_unrounded_less_by_voiceless_palatal_consonant} big_i minus big_c
                       | {schwar_by_alveolar_lateral_approximant} schwar minus l
;//                       | {close_less_by_bilabial} big_u minus m; // TODO: code too large error, KCSpon_r1X/VerbMobil/g21a/g211a/g211a12r.s2

  front_vowel =   {close_unrounded_long} i colon
                | {close_rounded_long} y colon
                | {close_unrounded_less} big_i
                | {close_rounded_less} big_y
                | {close_mid_unrounded_long} e colon
                | {close_mid_rounded_long} two colon
                | {open_mid_unrounded} big_e
                | {open_mid_unrounded_long} big_e colon
                | {open_mid_rounded} nine
                | {open_unrounded} a
                | {open_unrounded_long} a colon;

  schwa = at;
  schwar = six;

  central_vowel =   {mid} schwa
                  | {less_open} schwar;

  back_vowel =   {open_mid_rounded} big_o
               | {close_mid_rounded_long} o colon
               | {close_rounded_long} u colon
               | {close_less} big_u;

  monophthong =   {front} front_vowel
                | {back} back_vowel;

  nasal_vowel =   {front_open_unrounded} a tilde
                | {front_open_mid_unrounded} big_e tilde
                | {front_open_mid_rounded} nine tilde
                | {back_open_mid_rounded} big_o tilde;

  diphthong =   {front_open_unrounded_to_less_front_close_unrounded} a big_i
              | {front_open_unrounded_to_less_back_close} a big_u
              | {back_open_mid_rounded_to_less_front_close_rounded} big_o big_y;

  r_diphthong = monophthong six;

// TODO
//  vowel_symbol =   {monophthong} monophthong
//                 | {nasal} nasal_vowel
//                 | {diphthong} diphthong
//                 | {r_diphthong} r_diphthong
//                 | {schwa} schwa
//                 | {schwar} schwar;

  vowel_symbol =   {stressable} stressable_vowel
                 | {unstressable} central_vowel;

  stressable_vowel =   {monophthong} monophthong
                     | {nasal} nasal_vowel
                     | {diphthong} diphthong
                     | {r_diphthong} r_diphthong
                     | {syllabic_schwar} equals schwar;  // wie bei "naeher" (vs. "der") TODO: das geht irgendwie besser

//  unstressable_vowel =   {central_mid} schwa
//                       | {central_less_open} schwar;

  word_interruption_label =   {word_boundary} word_boundary_prefix word_interruption_symbol
                            | {word_internal} word_internal_prefix word_interruption_symbol;
